stages:
  - build
  - archive-package

.artifacts_template:
  artifacts:
    name: wheels
    paths:
      - driver/dist/cantact-*.whl
    expire_in: 15 minutes

build-linux:
  stage: build
  image: $PYIMAGE
  script:
    - apt update
    - apt install -y gcc curl libusb-1.0-0-dev pkg-config
    - curl -o rust.sh --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs
    - sh ./rust.sh -y
    - source "$HOME/.cargo/env"
    - rustup install nightly
    - pip install -r driver/requirements.txt
    - rustup override set nightly
    - cd driver
    - python setup.py bdist_wheel
  extends: .artifacts_template
  parallel:
    matrix:
      - PYIMAGE:
          - "python:3.9-slim-bullseye"
          - "python:3.10-slim-bullseye"
          - "python:3.11-slim-bullseye"
          - "python:3.12-slim-bullseye"

.build-windows:
  # It would be possible if we have windows
  stage: build
  image: $PYIMAGE
  script:
    - curl https://static.rust-lang.org/rustup/dist/x86_64-pc-windows-msvc/rustup-init.exe -o rustup-init.exe
    - ./rustup-init.exe -y
    - git clone https://github.com/Microsoft/vcpkg.git
    - cd vcpkg
    - .\bootstrap-vcpkg.bat
    - .\vcpkg integrate install
    - .\vcpkg install libusb
    - rustup install nightly
    - pip install -r driver/requirements.txt
    - rustup override set nightly
    - cd driver
    - python setup.py bdist_wheel
  extends: .artifacts_template
  parallel:
    matrix:
      - PYIMAGE:
          - "python:3.9-windowsservercore-ltsc2022"
          - "python:3.10-windowsservercore-ltsc2022"
          - "python:3.11-windowsservercore-ltsc2022"
          - "python:3.12-windowsservercore-ltsc2022"

package:
  stage: archive-package
  script:
    - echo "Packaging wheel files"
  needs:
    - build-linux
  extends: .artifacts_template
  artifacts:
    expire_in: never
